{"version":3,"sources":["FollowersList.js","GithubUserSearch.js","GithubUser.js","App.js","reportWebVitals.js","index.js"],"names":["FollowersList","state","isLoading","followers","error","followersUrl","this","props","fetch","then","response","json","data","setState","catch","message","className","map","follower","idx","login","src","avatar_url","alt","Component","GithubUserSearch","githubUser","searchForUser","userName","status","Error","onSearch","event","preventDefault","searchValue","target","value","content","name","style","width","followers_url","onSubmit","type","GithubUser","userSearch","username","match","params","prevProps","withRouter","NavBar","to","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b05d2020.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport './FollowersList.css';\n\nexport default class FollowersList extends Component {\n    state = {\n        isLoading: true,\n        followers: [],\n        error: ''\n    }\n\n    componentDidMount() {\n        const {followersUrl} = this.props;\n\n        fetch(`${followersUrl}?per_page=100`)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    followers: data,\n                    isLoading: false\n                })\n            })\n            .catch((error) => {\n                this.setState({\n                    isLoading: false,\n                    error: error.message\n                })\n            });\n    }\n\n    render() {\n        const {isLoading, error, followers} = this.state;\n        \n        return (\n            <div className=\"followers-list\">\n                <h2>Followers</h2>\n                {isLoading && <p>Loading...</p>}\n                {error && <p>{error}</p>}\n\n                {followers.map((follower, idx) => {\n                    return (\n                        <div className=\"follower\" key={idx}>\n                            <h3>{follower.login}</h3>\n                            <img\n                                src={follower.avatar_url}\n                                alt={`${follower.login}'s avatar`}\n                            />\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport FollowersList from './FollowersList';\n\nclass GithubUserSearch extends Component {\n    state = {\n        isLoading: false,\n        githubUser: null,\n        error: ''\n    }\n\n    searchForUser = (userName) => {\n        this.setState({\n            isLoading: true,\n            githubUser: null,\n            error: ''\n        });\n\n        fetch(`https://api.github.com/users/${userName}`)\n            .then(response => {\n                if (response.status === 404) {\n                    throw Error('User not found');\n                }\n\n                if (response.status !== 200) {\n                    throw Error('An error occurred');\n                }\n                \n                return response.json();\n            })\n            .then(data => {\n                this.setState({\n                    isLoading: false,\n                    githubUser: data\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    isLoading: false,\n                    error: error.message\n                });\n            });\n    }\n\n    onSearch = (event) => {\n        event.preventDefault();\n        const searchValue = event.target[0].value;\n        this.searchForUser(searchValue);\n    }\n\n    render() {\n        const {isLoading, error, githubUser} = this.state;\n        let content;\n\n        if (githubUser) {\n            content = (\n                <div>\n                    <h2>{githubUser.name}</h2>\n                    <img\n                        style={{ width: '100px' }}\n                        src={githubUser.avatar_url}\n                        alt={`${githubUser.name}'s avatar`}\n                    />\n                    <FollowersList followersUrl={githubUser.followers_url} />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <h1>Github User</h1>\n                <form onSubmit={this.onSearch}>\n                    <input type=\"text\" />\n                    <button type=\"submit\">Search</button>\n                </form>\n\n                {isLoading && <p>Loading...</p>}\n                {error && <p>{error}</p>}\n                {content}\n            </div>\n        );\n    }\n}\n\nexport default GithubUserSearch;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\n\nclass GithubUser extends Component {\n    state = {\n        isLoading: true,\n        githubUser: null,\n        error: false\n    }\n\n    componentDidMount() {\n        this.userSearch();\n    }\n\n    componentDidUpdate(prevProps) {\n        const oldUsername = prevProps.match.params.username;\n        const incomingUsername = this.props.match.params.username;\n\n        if (oldUsername !== incomingUsername) {\n            this.userSearch();\n        }\n    }\n\n    userSearch = () => {\n        const username = this.props.match.params.username;\n\n        fetch(`https://api.github.com/users/${username}`)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    isLoading: false,\n                    githubUser: data\n                });\n            })\n            .catch(() => {\n                this.setState({\n                    isLoading: false,\n                    error: true\n                });\n            });\n    }\n\n    render() {\n        const {isLoading, error, githubUser} = this.state;\n        let content;\n\n        if (githubUser) {\n            content = (\n                <div>\n                    <h2>{githubUser.name}</h2>\n                    <img\n                        style={{ width: '100px' }}\n                        src={githubUser.avatar_url}\n                        alt={`${githubUser.name}'s avatar`}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <h1>Github User</h1>\n                {isLoading && <p>Loading...</p>}\n                {error && <p>Error. Please refresh and try again</p>}\n                {content}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(GithubUser);","import './App.css';\nimport GithubUserSearch from './GithubUserSearch';\nimport GithubUser from './GithubUser';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\n\nfunction NavBar() {\n  return (\n    <ul>\n      <li>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li>\n        <Link to=\"/github/search\">Github Search</Link>\n      </li>\n      <li>\n        <Link to=\"/github/users/bhague1281\">Brian's Github</Link>\n      </li>\n      <li>\n        <Link to=\"/github/users/kbnewlon\">Kayla's Github</Link>\n      </li>\n    </ul>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <h1>Home</h1>\n          </Route>\n          <Route exact path=\"/github/search\" component={GithubUserSearch} />\n          <Route path=\"/github/users/:username\">\n            <GithubUser />\n          </Route>\n          <Route path=\"*\">\n            <h1>404</h1>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}